name: Build Package

on:
  workflow_call:
    inputs:
      preview:
        description: '是否为预览构建'
        type: boolean
        required: false
        default: true

env:
  APP_NAME: puniyu

jobs:
  build_windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x86_64-pc-windows-msvc
            label: windows-x86_64

    steps:
      - name: 检出仓库
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 构建
        shell: bash
        run: |
          if [ "${{ inputs.preview }}" == "true" ]; then
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }} --features preview
          else
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }}
          fi


      - name: 上传构建产物
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: "${{ env.APP_NAME }}-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/${{ env.APP_NAME }}.exe

  build_macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64-apple-darwin
            label: macos-x86_64
          - runner: macos-latest
            target: aarch64-apple-darwin
            label: macos-aarch64

    steps:
      - name: 检出仓库
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 添加目标平台
        run: |
          rustup target add ${{ matrix.platform.target }}

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 构建
        run: |
          if [ "${{ inputs.preview }}" == "true" ]; then
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }} --features preview
          else
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }}
          fi

      - name: 上传构建产物
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: "${{ env.APP_NAME }}-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/${{ env.APP_NAME }}

  build_linux:
    runs-on: ${{ matrix.platform.runner }}
    container: ${{ matrix.platform.container }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            label: linux-x86_64
          - runner: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            label: linux-aarch64

    steps:
      - name: 检出仓库
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4

      - name: 设置 rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform.target }}

      - name: 设置apt 包
        uses: awalsh128/cache-apt-pkgs-action@2c09a5e66da6c8016428a2172bd76e5e4f14bb17 # v1
        with:
          packages: libdrm-dev

      - name: 设置 rust 缓存
        uses: swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2
        with:
          prefix-key: ${{ env.APP_NAME }}

      - name: 构建
        run: |
          if [ "${{ inputs.preview }}" == "true" ]; then
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }} --features preview
          else
            cargo build --release --bin ${{ env.APP_NAME }} --target ${{ matrix.platform.target }}
          fi

      - name: 上传构建产物
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: "${{ env.APP_NAME }}-${{ matrix.platform.label }}"
          path: |
            target/${{ matrix.platform.target }}/release/${{ env.APP_NAME }}
